plugins {
  id 'maven'
  id 'maven-publish'
  id 'java-library'

  id 'checkstyle'
  id 'com.diffplug.gradle.spotless' version '3.24.0'
  id 'net.ltgt.errorprone' version '0.8.1'
  id 'pmd'
  id 'com.github.ben-manes.versions' version '0.21.0'

  id 'edu.wpi.first.GradleRIO' version '2019.4.1'
}

group = 'com.github.HillelCoates'

repositories { mavenCentral() }

dependencies {
  errorprone('com.google.errorprone:error_prone_core:2.3.3')

  compile wpi.deps.wpilib()
  compile wpi.deps.vendor.java()
  nativeZip wpi.deps.vendor.jni(wpi.platforms.roborio)
  nativeDesktopZip wpi.deps.vendor.jni(wpi.platforms.desktop)

  implementation 'com.google.guava:guava:28.0-jre'
  implementation 'com.google.code.gson:gson:2.8.5'

  testImplementation 'org.junit.jupiter:junit-jupiter:5.5.1'
  testImplementation 'org.assertj:assertj-core:3.13.1'
}

compileJava { dependsOn 'spotlessApply' }

test {
  useJUnitPlatform { excludeTags 'slow' }
  testLogging.showStandardStreams = true
}

spotless {
  java { googleJavaFormat('1.7') }
  groovyGradle {
    greclipse()
    indentWithSpaces(2)
  }
}

task getLogs(type:Exec) {
  workingDir '../tomcat/bin'

  //on windows:
  commandLine 'cmd', '/c', 'scp -4 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p lvuser@roborio-', {}, '-frc.local:/home/lvuser/log-*.txt', 'logs/'

  commandLine './stop.sh'

  standardOutput = new ByteArrayOutputStream()
  ext.output = { return standardOutput.toString() }
}

checkstyle {
  toolVersion = '8.19'
  config = rootProject.resources.text.fromFile('config/checkstyle/checkstyle.xml')
  configProperties = [ 'suppressionFile': project(':').file('config/checkstyle/suppressions.xml') ]
}

task sourceJar(type: Jar) {
  from sourceSets.main.allJava
  archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
  from javadoc
  archiveClassifier = 'javadoc'
}

publishing {
  publications {
    freezylib(MavenPublication) {
      from components.java
      artifact sourceJar
      artifact javadocJar
    }
  }
}
